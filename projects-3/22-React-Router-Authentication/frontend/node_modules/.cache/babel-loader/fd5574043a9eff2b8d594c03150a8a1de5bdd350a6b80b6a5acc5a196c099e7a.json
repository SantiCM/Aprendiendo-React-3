{"ast":null,"code":"var _jsxFileName = \"/Users/santimelo/Dev/React-3/01-starting-project/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport const Action = async ({\n  request\n}) => {\n  const searcParams = new URL(request.url).searchParams;\n  const mode = searcParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      message: \"Unsopported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getDate.getHours() + 1);\n  localStorage.setItem('expiration', token);\n  return redirect(\"/\");\n};\n_c2 = Action;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthenticationPage\");\n$RefreshReg$(_c2, \"Action\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","Action","request","searcParams","URL","url","searchParams","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","localStorage","setItem","expiration","Date","setHours","getDate","getHours","_c2","$RefreshReg$"],"sources":["/Users/santimelo/Dev/React-3/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n\n  return <AuthForm />;\n\n}\n\nexport default AuthenticationPage;\n\nexport const Action = async ({request}) => {\n\n  const searcParams = new URL(request.url).searchParams\n\n  const mode = searcParams.get(\"mode\") || \"login\"\n\n  if(mode !== \"login\" && mode !== \"signup\" ) {\n    \n    throw json ({message: \"Unsopported mode.\"}, {status: 422})\n  \n  }\n\n  const data = await request.formData()\n\n  const authData = {\n  \n    email: data.get(\"email\"),\n\n    password: data.get(\"password\")\n  \n  }\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n\n    method: \"POST\",\n\n    headers: {\n      \n      \"Content-Type\": \"application/json\"\n    \n    },\n\n    body: JSON.stringify(authData)\n\n  })\n\n  if(response.status === 422 || response.status === 401) {\n  \n    return response\n  \n  }\n\n  if(!response.ok) {\n  \n    throw json ({message: \"Could not authenticate user\"}, {status: 500})\n  \n  }\n\n  const resData = await response.json()\n\n  const token = resData.token;\n\n  localStorage.setItem('token', token);\n\n  const expiration = new Date()\n\n  expiration.setHours(expiration.getDate.getHours() + 1)\n\n  localStorage.setItem('expiration', token);\n\n  return redirect(\"/\")\n\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAE5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAJQL,kBAAkB;AAM3B,eAAeA,kBAAkB;AAEjC,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAO;EAACC;AAAO,CAAC,KAAK;EAEzC,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACC,YAAY;EAErD,MAAMC,IAAI,GAAGJ,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAE/C,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAG;IAEzC,MAAMjB,IAAI,CAAE;MAACmB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAE5D;EAEA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EAErC,MAAMC,QAAQ,GAAG;IAEfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IAExBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAE/B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAE5DW,MAAM,EAAE,MAAM;IAEdC,OAAO,EAAE;MAEP,cAAc,EAAE;IAElB,CAAC;IAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAE/B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IAErD,OAAOM,QAAQ;EAEjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAE;IAEf,MAAMjC,IAAI,CAAE;MAACmB,OAAO,EAAE;IAA6B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAEtE;EAEA,MAAMc,OAAO,GAAG,MAAMR,QAAQ,CAAC1B,IAAI,CAAC,CAAC;EAErC,MAAMmC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EAEpC,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAE7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,OAAO,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAEtDN,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,KAAK,CAAC;EAEzC,OAAOlC,QAAQ,CAAC,GAAG,CAAC;AAEtB,CAAC;AAAA0C,GAAA,GA9DYhC,MAAM;AAAA,IAAAD,EAAA,EAAAiC,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}